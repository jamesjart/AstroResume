---
import 'hotkeypad/reset.css'
import 'hotkeypad/index.css'
import { type SocialIcon } from '@/types'
import { basics } from '@cv'
import { Icon } from 'astro-icon/components'

const { profiles } = basics

const SOCIAL_ICONS: SocialIcon = {
  QQ: `
	<svg
  xmlns='http://www.w3.org/2000/svg'
  width='16'
  height='16'
  viewBox='0 0 24 24'
  ><g fill='none'
    ><path
      d='m12.593 23.258l-.011.002l-.071.035l-.02.004l-.014-.004l-.071-.035q-.016-.005-.024.005l-.004.01l-.017.428l.005.02l.01.013l.104.074l.015.004l.012-.004l.104-.074l.012-.016l.004-.017l-.017-.427q-.004-.016-.017-.018m.265-.113l-.013.002l-.185.093l-.01.01l-.003.011l.018.43l.005.012l.008.007l.201.093q.019.005.029-.008l.004-.014l-.034-.614q-.005-.018-.02-.022m-.715.002a.02.02 0 0 0-.027.006l-.006.014l-.034.614q.001.018.017.024l.015-.002l.201-.093l.01-.008l.004-.011l.017-.43l-.003-.012l-.01-.01z'
    ></path><path
      fill='currentColor'
      d='M12 2a6.285 6.285 0 0 0-6.276 5.937l-.146 2.63a28 28 0 0 0-.615 1.41c-1.24 3.073-1.728 5.773-1.088 6.032c.335.135.913-.426 1.566-1.432a6.67 6.67 0 0 0 1.968 3.593c-1.027.35-1.91.828-1.91 1.33c0 .509 2.48.503 4.239.5h.001c.549-.002 1.01-.008 1.38-.057a6.7 6.7 0 0 0 1.76 0c.37.05.833.055 1.382.056c1.76.004 4.239.01 4.239-.499c0-.502-.883-.979-1.909-1.33a6.67 6.67 0 0 0 1.967-3.586c.65 1.002 1.227 1.56 1.56 1.425c.64-.259.154-2.96-1.088-6.032a28 28 0 0 0-.607-1.395l-.147-2.645A6.285 6.285 0 0 0 12 2'
    ></path></g
  ></svg
>
`,
}

const profilesInfo = profiles.map(({ network, url }) => {
  const icon = SOCIAL_ICONS[network]
  const firstLetter = network[0].toUpperCase()

  return {
    id: network,
    section: 'Social',
    title: `Visit ${network}`,
    url,
    icon,
    hotkey: `ctrl+${firstLetter}`,
  }
})
---

<footer id='normal-footer' class='print:hidden flex flex-col gap-2'>
  <div>
    Press <kbd>Cmd</kbd> + <kbd>K</kbd> to open the command palette.
  </div>
</footer>
<div class='footer-button print:hidden'>
  <Icon name='ri:command-fill' width={20} height={20} class="text-skin-hue"/>
</div>

<div
  id='hotkeypad'
  data-placeholder='Search Command'
  data-info={JSON.stringify(profilesInfo)}>
</div>

<script>
  interface Info {
    id: string
    section: string
    title: string
    url: string
    icon: string
    hotkey: string
    handler?: () => void
  }

  import HotKeyPad from 'hotkeypad'

  const hotkeypad = new HotKeyPad()
  const info = hotkeypad.instance.getAttribute('data-info') ?? '[]'
  const parsedInfo = JSON.parse(info) as Info[]

  const data = parsedInfo.map(({ url, hotkey, icon, id, section, title }) => {
    return {
      id,
      title,
      icon,
      hotkey,
      section,
      handler: () => {
        window.open(url, '_blank')
      },
    }
  })
  hotkeypad.setCommands([
    {
      id: 'print',
      title: 'Download Resume',
      icon: "",
      hotkey: 'ctrl+R',
      section: 'Actions',
      handler: () => {
    window.open('https://drive.google.com/file/d/1QxuAZBCjBsQ1fPHcBC-MX6D7uEMULreq/view?usp=sharing', '_blank')
      },
    },
    ...data,
  ])

  const footerButtons = document.querySelectorAll('.footer-button')
  footerButtons.forEach(button => {
    button.addEventListener('click', () => {
      let event = new KeyboardEvent('keydown', {
        key: 'K',
        code: 'KeyK',
        keyCode: 75,
        which: 75,
        ctrlKey: true,
        altKey: false,
        shiftKey: false,
        metaKey: false,
      })
      document.dispatchEvent(event)
    })
  })
</script>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @media (min-width: 601px) {
    .footer-button {
      display: none;
    }
  }

  @media (max-width: 600px) {
    #normal-footer {
      display: none;
    }

    .footer-button {
      background: #fff;
      position: fixed;
      border: 1px solid #eee;
      right: 10px;
      bottom: 10px;
      width: 50px;
      height: 50px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
    }
  }

  footer {
    @apply bg-skin-button-accent;
    position: fixed;
    bottom: 0px;
    width: 100%;
    padding-block: 8px;
    text-align: center;
    font-size: 0.85rem;

    view-timeline-name: --revealing;
    view-timeline-axis: block;

    animation: linear 0.3s fadeIn;
    animation-timeline: --revealing;
    animation-range: entry 100% cover 10%;
  }
  kbd {
    @apply bg-skin-muted;
    border-radius: 4px;
    padding: 2px 4px;
    font-size: 12px;
  }
  #hotkeypad {
    --hotkeypad-bg-kbd: rgb(var(--muted));
    --hotkeypad-bg-backdrop: rgb(var(--color-fill));
    --hotkeypad-bg-container: rgb(var(--color-fill));
    --hotkeypad-bg-item-hover: rgba(var(--color-text), 20%);
    --hotkeypad-border-container: rgb(var(--muted));
    --hotkeypad-border-container-hover: rgb(var(--color-fill));
    --hotkeypad-fg-muted: rgb(var(--muted));
    @media (prefers-color-scheme: dark) {
      --hotkeypad-bg-kbd: rgb(var(--muted));
      --hotkeypad-bg-backdrop: rgb(var(--color-fill));
      --hotkeypad-bg-container: rgb(var(--color-fill));
      --hotkeypad-bg-item-hover: rgba(var(--color), 10%);
      --hotkeypad-border-container: rgb(var(--muted));
      --hotkeypad-border-container-hover: rgb(var(--color-fill));
      --hotkeypad-fg-muted: rgb(var(--color-text-base));
    }
  }
</style>
